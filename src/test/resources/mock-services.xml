<?xml version="1.0" encoding="UTF-8"?>
<!--
  Stefan Meyer, 2012
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:seam="http://jboss.com/products/seam/spring-seam"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
        	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
            http://jboss.com/products/seam/spring-seam
            http://jboss.com/products/seam/spring-seam-2.0.xsd">

	<!-- ************************ -->
	<!-- *** Generic managers *** -->
	<!-- ************************ -->

	<bean id="entityManager" class="de.sinnerschrader.fue.commerce.framework.logic.entity.EntityManager"/>

	<!-- ************************************************ -->
	<!-- *** Framework internal services (core setup) *** -->
	<!-- ************************************************ -->

	<bean id="serviceLocator" init-method="initialize"
		class="de.sinnerschrader.fue.commerce.framework.logic.internal.ServiceLocator">
		<property name="entityService" ref="entityService"/>
		<property name="mailService" ref="mailService"/>
		<property name="numberService" ref="numberService"/>
		<property name="systemService" ref="systemService"/>
	</bean>

	<bean id="entityService" class="de.sinnerschrader.fue.commerce.framework.logic.internal.EntityService">
		<property name="dao" ref="dao"/>
	</bean>
 
	<bean id="mailService" class="de.sinnerschrader.fue.commerce.framework.logic.internal.MailService">
		<property name="mailDao" ref="mailDao"/>

		<!-- TODO: Specify bounce analyzing properties in ant properties file (e.g. default.properties) -->


		<!-- TODO: If you plan to run several instances of the mail application on one host system, -->
		<!-- you must declare a unique instance ID as JNDI object 'InstanceId' in the server.xml. -->
		<!-- 
		<property name="instanceId">
			<bean id="jndiInstanceId" class="org.springframework.jndi.JndiObjectFactoryBean">
				<property name="jndiName" value="java:comp/env/InstanceId"/>
			</bean>
		</property>
 		-->

		<!-- TODO: Specify either the JNDI name of the mail session or a properties resource -->

		<property name="mailSession" value="java:/Mail"/>

		<!--
		<property name="mailSessionProperties">
			<props>
				<prop key="mail.smtp.auth">@mail.smtp.auth@</prop>
				<prop key="mail.smtp.host">@mail.smtp.host@</prop>
				<prop key="mail.smtp.port">@mail.smtp.port@</prop>
				<prop key="mail.smtp.user">@mail.smtp.user@</prop>
				<prop key="mail.smtp.password">@mail.smtp.password@</prop>
			</props>
		</property>
		-->

		<property name="massMailingBatchSize" value="100"/>
	</bean>

	<bean id="numberService" class="de.sinnerschrader.fue.commerce.framework.logic.internal.NumberService">
		<property name="numberDao" ref="numberDao"/>
		<property name="numberRanges" ref="numberRanges"/>
	</bean>

	<bean id="systemService" class="de.sinnerschrader.fue.commerce.framework.logic.internal.SystemService">
		<!-- TODO: Define your default locale here. -->
		<property name="defaultLocale" value="de_DE"/>
		<!-- TODO: Define your default time zone here. -->
		<property name="defaultTimeZone" value="GMT+1"/>
	</bean>

	<!-- ************************************* -->
	<!-- *** Framework data access objects *** -->
	<!-- ************************************* -->

	<!-- Parent DAO -->

	<bean id="dao" lazy-init="true"
		class="de.sinnerschrader.fue.commerce.framework.logic.entity.Dao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<!-- Framework DAOs -->

	<bean id="downloadDataDao" parent="dao"
		class="de.sinnerschrader.fue.commerce.framework.logic.internal.dao.DownloadDataDao"/>

	<bean id="mailDao" parent="dao"
		class="de.sinnerschrader.fue.commerce.framework.logic.internal.dao.MailDao"/>

	<bean id="mutexDao" parent="dao"
		class="de.sinnerschrader.tcs.hzm.MutexDao">

		<!-- TODO: If the following SQL does not work on your DBMS to lock rows, customize -->
		<!-- Statements starting with a question mark do not abort the creation, if they fail -->
		<property name="creationSqls">
			<list>
				<value>?create table @TABLE@ (id int)</value>
				<value>insert into @TABLE@ values (0)</value>
			</list>
		</property>

		<property name="findSql" value="select id from @TABLE@"/>
		<property name="lockSql" value="select id from @TABLE@ for update"/>
	</bean>

	<bean id="numberDao" parent="dao"
		class="de.sinnerschrader.fue.commerce.framework.logic.internal.dao.NumberDao"/>

	<bean id="uploadDataDao" parent="dao"
		class="de.sinnerschrader.fue.commerce.framework.logic.internal.dao.UploadDataDao"/>

</beans>
